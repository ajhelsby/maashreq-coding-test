# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.5
        # Provide the password for postgres
        env:
          POSTGRES_DB: mashreq
          POSTGRES_USER: mashreq
          POSTGRES_PASSWORD: RaN60M1
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_NAME: mashreq
      DATABASE_USERNAME: mashreq
      DATABASE_PASSWORD: RaN60M1
      # used for pipeline postgres service
      POSTGRES_DB: mashreq
      POSTGRES_USER: mashreq
      POSTGRES_PASSWORD: RaN60M1
      JWT_SECRET: 2C2D3245018E44B39D5D86049BE565F3
      CORS_ALLOWED_ORIGIN: http://localhost:3000
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v3

      # Set up JDK 22
      - name: actions/checkout@v3
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      # Set up Maven cache
      - name: Cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test with Maven
        run: mvn -B clean test --file pom.xml

  build:
    #Depends on build's job
    needs: test
    name: Build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 22
      - name: Get current date
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +'%s')"
      - name: Package
        run: mvn package -DskipTests
